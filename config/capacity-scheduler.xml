<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<configuration>

    <property>
        <name>yarn.scheduler.capacity.maximum-applications</name>
        <value>10000</value>
        <description>
            Maximum number of applications that can be pending and running.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.maximum-am-resource-percent</name>
        <value>0.5</value> # was 0.1
        <description>
            Maximum percent of resources in the cluster which can be used to run
            application masters i.e. controls number of concurrent running
            applications.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.resource-calculator</name>
        <value>org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator</value>
        <description>
            The ResourceCalculator implementation to be used to compare
            Resources in the scheduler.
            The default i.e. DefaultResourceCalculator only uses Memory while
            DominantResourceCalculator uses dominant-resource to compare
            multi-dimensional resources such as Memory, CPU etc.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.root.queues</name>
        <value>default</value>
        <description>
            The queues at the this level (root is the root queue).
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.root.default.capacity</name>
        <value>100</value>
        <description>Default queue target capacity.</description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.root.default.user-limit-factor</name>
        <value>1.0</value>
        <description>
            Default queue user limit a percentage from 0.0 to 1.0.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.root.default.maximum-capacity</name>
        <value>100</value>
        <description>
            The maximum capacity of the default queue.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.root.default.state</name>
        <value>RUNNING</value>
        <description>
            The state of the default queue. State can be one of RUNNING or STOPPED.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.root.default.acl_submit_applications</name>
        <value>*</value>
        <description>
            The ACL of who can submit jobs to the default queue.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.root.default.acl_administer_queue</name>
        <value>*</value>
        <description>
            The ACL of who can administer jobs on the default queue.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.root.default.acl_application_max_priority</name>
        <value>*</value>
        <description>
            The ACL of who can submit applications with configured priority.
            For e.g, [user={name} group={name} max_priority={priority} default_priority={priority}]
        </description>
    </property>
    <property>
        <name>yarn.scheduler.capacity.root.default.maximum-application-lifetime
        </name>
        <value>-1</value>
        <description>
            Maximum lifetime of an application which is submitted to a queue
            in seconds. Any value less than or equal to zero will be considered as
            disabled.
            This will be a hard time limit for all applications in this
            queue. If positive value is configured then any application submitted
            to this queue will be killed after exceeds the configured lifetime.
            User can also specify lifetime per application basis in
            application submission context. But user lifetime will be
            overridden if it exceeds queue maximum lifetime. It is point-in-time
            configuration.
            Note : Configuring too low value will result in killing application
            sooner. This feature is applicable only for leaf queue.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.root.default.default-application-lifetime
        </name>
        <value>-1</value>
        <description>
            Default lifetime of an application which is submitted to a queue
            in seconds. Any value less than or equal to zero will be considered as
            disabled.
            If the user has not submitted application with lifetime value then this
            value will be taken. It is point-in-time configuration.
            Note : Default lifetime can't exceed maximum lifetime. This feature is
            applicable only for leaf queue.
        </description>
    </property>
    <property>
        <name>yarn.scheduler.capacity.node-locality-delay</name>
        <value>-1</value>
        <description>
            Number of missed scheduling opportunities after which the CapacityScheduler
            attempts to schedule rack-local containers.
            When setting this parameter, the size of the cluster should be taken into account.
            We use 40 as the default value, which is approximately the number of nodes in one rack.
            Note, if this value is -1, the locality constraint in the container request
            will be ignored, which disables the delay scheduling.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.rack-locality-additional-delay</name>
        <value>-1</value>
        <description>
            Number of additional missed scheduling opportunities over the node-locality-delay
            ones, after which the CapacityScheduler attempts to schedule off-switch containers,
            instead of rack-local ones.
            Example: with node-locality-delay=40 and rack-locality-delay=20, the scheduler will
            attempt rack-local assignments after 40 missed opportunities, and off-switch assignments
            after 40+20=60 missed opportunities.
            When setting this parameter, the size of the cluster should be taken into account.
            We use -1 as the default value, which disables this feature. In this case, the number
            of missed opportunities for assigning off-switch containers is calculated based on
            the number of containers and unique locations specified in the resource request,
            as well as the size of the cluster.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.queue-mappings-override.enable</name>
        <value>false</value>
        <description>
            If a queue mapping is present, will it override the value specified
            by the user? This can be used by administrators to place jobs in queues
            that are different than the one specified by the user.
            The default is false.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.per-node-heartbeat.maximum-offswitch-assignments</name>
        <value>1</value>
        <description>
            Controls the number of OFF_SWITCH assignments allowed
            during a node's heartbeat. Increasing this value can improve
            scheduling rate for OFF_SWITCH containers. Lower values reduce
            "clumping" of applications on particular nodes. The default is 1.
            Legal values are 1-MAX_INT. This config is refreshable.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.application.fail-fast</name>
        <value>false</value>
        <description>
            Whether RM should fail during recovery if previous applications'
            queue is no longer valid.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.workflow-priority-mappings-override.enable</name>
        <value>false</value>
        <description>
            If a priority mapping is present, will it override the value specified
            by the user? This can be used by administrators to give applications a
            priority that is different than the one specified by the user.
            The default is false.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.default.capacity</name>
        <value>75</value>
        <description>
            Queue capacity in percentage (%) as a float (e.g. 12.5) OR as absolute resource queue minimum capacity.
            The sum of capacities for all queues, at each level, must be equal to 100.
            However if absolute resource is configured, sum of absolute resources of child queues could be less than
            it’s parent absolute resource capacity. Applications in the queue may consume more resources than the queue’s
            capacity if there are free resources, providing elasticity.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.default.maximum-capacity</name>
        <value>-1</value>
        <description>
            Maximum queue capacity in percentage (%) as a float OR as absolute resource queue maximum capacity.
            This limits the elasticity for applications in the queue. 1) Value is between 0 and 100.
            2) Admin needs to make sure absolute maximum capacity >= absolute capacity for each queue.
            Also, setting this value to -1 sets maximum capacity to 100%.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.default.minimum-user-limit-percent</name>
        <value>100</value>
        <description>
            Each queue enforces a limit on the percentage of resources allocated to a user at any given time,
            if there is demand for resources. The user limit can vary between a minimum and maximum value.
            The former (the minimum value) is set to this property value and the latter (the maximum value)
            depends on the number of users who have submitted applications. For e.g., suppose the value of this property is 25.
            If two users have submitted applications to a queue, no single user can use more than 50% of the queue resources.
            If a third user submits an application, no single user can use more than 33% of the queue resources.
            With 4 or more users, no user can use more than 25% of the queues resources. A value of 100 implies no user
            limits are imposed. The default is 100. Value is specified as a integer.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.default.user-limit-factor</name>
        <value>1</value>
        <description>
            The multiple of the queue capacity which can be configured to allow a single user to acquire more resources.
            By default this is set to 1 which ensures that a single user can never take more than the queue’s configured
            capacity irrespective of how idle the cluster is. Value is specified as a float.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.default.maximum-allocation-mb</name>
        <value>12</value>
        <description>
            The per queue maximum limit of memory to allocate to each container request at the Resource Manager.
            This setting overrides the cluster configuration yarn.scheduler.maximum-allocation-mb.
            This value must be smaller than or equal to the cluster maximum.
        </description>
    </property>

    <property>
        <name>yarn.scheduler.capacity.default.maximum-allocation-vcores</name>
        <value>3</value>
        <description>
            The per queue maximum limit of virtual cores to allocate to each container request at the Resource Manager.
            This setting overrides the cluster configuration yarn.scheduler.maximum-allocation-vcores.
            This value must be smaller than or equal to the cluster maximum.
        </description>
    </property>

</configuration>